# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Tests
on:
  workflow_dispatch:
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

jobs:
  build:
    env:
        NUMBA_ENABLE_CUDASIM: "1"        # run Numba’s CPU simulator
        NUMBA_CUDA_USE_NVIDIA_BINDING: "0"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"] # <3.9 requires modifying typehints to use Union instead of | operator

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest numba numpy==1.26.4 cupy-cuda12x numba-cuda[cu12]
        python -m pip install -e .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      
      run: |
        pytest


  cuda:
    runs-on: ubuntu-latest      
    environment: stable
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: {python-version: '3.12'}
      - run: pip install lightning-sdk
      - name: Run tests inside free T4 studio
        run: |
          python - <<'PY'
          import os, re, subprocess, sys, uuid
          from lightning_sdk import Studio, Machine

          studio = Studio(
              name=f"test-studio-{uuid}",
              teamspace="Vision-model",
              user=os.environ["LIGHTNING_USERNAME"]
          )
          studio.start(Machine.T4)          # ≈15 s spin-up
          try:
              repo = f"https://github.com/{os.environ['GITHUB_REPOSITORY']}.git"
              branch = os.environ.get("GITHUB_REF_NAME", "main")
              studio.run(f"git clone --depth 1 --branch {branch} {repo} src")
              studio.run("cd src")
              studio.run("pip install -e .")
              studio.run("pip install pytest pytest-cov numba 'numba-cuda[cu12]' numpy==1.26.4")
              code = studio.run("pytest -q", capture_exit_code=True)
              sys.exit(code)
          finally:
              studio.stop(); studio.delete()
          PY
        env:
          LIGHTNING_API_KEY: ${{ secrets.LIGHTNING_API_KEY }}
          LIGHTNING_USER_ID: ${{ secrets.LIGHTNING_USER_ID }}
          LIGHTNING_USERNAME: ${{ secrets.LIGHTNING_USERNAME }}
