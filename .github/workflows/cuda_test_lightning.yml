name: CUDA-enabled tests
on:
  workflow_dispatch:
  
jobs:
  cuda:
    runs-on: ubuntu-latest      
    environment: stable
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: {python-version: '3.12'}
      - run: pip install lightning-sdk
      - name: Run tests inside free T4 studio
        run: |
          python - <<'PY'
          import os, re, subprocess, sys, uuid
          from lightning_sdk import Studio, Machine

          studio = Studio(
              name=f"test-studio-{uuid.uuid4()}",
              teamspace="Vision-model",
              user=os.environ["LIGHTNING_USERNAME"]
          )
          studio.start(Machine.T4)          # â‰ˆ15 s spin-up
          try:
              repo = f"https://github.com/{os.environ['GITHUB_REPOSITORY']}.git"
              branch = os.environ.get("GITHUB_REF_NAME", "main")
              studio.run(f"git clone --depth 1 --branch {branch} {repo} src")
              studio.run("cd src")
              studio.run("pip install -e src")
              studio.run("pip install pytest pytest-cov numba 'numba-cuda[cu12]' numpy==1.26.4") 
              code = studio.run_with_exit_code("pytest -vv -ra --junitxml=pytest-results.xml | tee pytest-output.log")

              studio.download("pytest-results.xml", "pytest-results.xml")
              studio.download("pytest-output.log",  "pytest-output.log")
          finally:
              studio.stop(); studio.delete()
          PY
        env:
          LIGHTNING_API_KEY: ${{ secrets.LIGHTNING_API_KEY }}
          LIGHTNING_USER_ID: ${{ secrets.LIGHTNING_USER_ID }}
          LIGHTNING_USERNAME: ${{ secrets.LIGHTNING_USERNAME }}

      - name: Upload pytest artefacts
        if: always()       # ensure we keep logs even on failure
        uses: actions/upload-artifact@v4
        with:
          name: pytest-artifacts
          path: |
            pytest-output.log
            pytest-results.xml
