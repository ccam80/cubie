[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where    = ["src"]
exclude  = ["tests*"]

[project]
name = "CC_CuMC"
version = "0.0.1"
description = "GPU-native (ish - compiled using Numba in Python) forward-integration and monte-carlo analysis of ODE systems."
authors = [
    { name="Chris Cameron" }
]
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
license-files = ["LICEN[CS]E*"]
dependencies = [
    "numpy",
    "numba",
    "numba-cuda",
    "cupy-cuda12x",
    "scipy",
]
[project.urls]
Homepage = "https://github.com/ccam80/smc.git"
Issues = "https://github.com/https://github.com/ccam80/smc/issues"

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "pytest-durations",
]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests"
]
markers = [
    "nocudasim: Will fail if run on the GPU simulator, only test on real GPU"
]
addopts = [
    "--import-mode=importlib",
    "-ra",
    "--cov=CuMC",
    "--cov-report=xml:coverage.xml",
    "--cov-report=term-missing",
    "--json-report",
    "--json-report-file=tests/pytest_report.json",
]
filterwarnings = [
    "ignore::numba.core.errors.NumbaPerformanceWarning",
]

[tool.coverage.run]
#source = ["CuMC"]
omit = [
    "*/tests/*",
    "*/__pycache__/*"
]
relative_files = true


[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
show_missing = true

[tool.coverage.html]
directory = "htmlReport"
